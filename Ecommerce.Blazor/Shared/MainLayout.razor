@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="app-container">
    <h1>E-commerce Site</h1>
    <nav>
        <ul>
            <li><NavLink href="" Match="NavLinkMatch.All">Products</NavLink></li>
            <!-- Order History link commented out for future use -->
            <!-- <li><NavLink href="orders">Order History</NavLink></li> -->

            <!-- Authentication Links -->
            <AuthorizeView>
                <Authorized>
                     <li class="user-info">Welcome, @context.User.FindFirstValue(ClaimTypes.Email)</li>
                     @* Logout Button - Triggers OIDC logout process *@
                     <li><button class="nav-link-button" @onclick="BeginLogout">Logout</button></li>
                     
                     @* Add Admin links if needed - Use explicit context name for inner AuthorizeView *@
                     <AuthorizeView Roles="Admin" Context="adminContext"> 
                         <li><NavLink href="/admin/products">Product Management</NavLink></li>
                     </AuthorizeView>
                </Authorized>
                <NotAuthorized>
                    @* Login Button - Triggers OIDC login process *@
                    <li><button class="nav-link-button" @onclick="BeginLogin">Login</button></li>
                    @* Registration usually happens via the Identity Service UI now *@
                    @* <li><button class="nav-link-button" @onclick="OpenRegisterModal">Register</button></li> *@
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </nav>

    <main>
        @Body
    </main>
</div>

<!-- Remove Modals -->
@* @if (showLoginModal)
{
    <LoginModal OnClose="CloseModals" OnSwitchToRegister="SwitchToRegister" />
}
@if (showRegisterModal)
{
    <RegisterModal OnClose="CloseModals" OnSwitchToLogin="SwitchToLogin" />
} *@

@code {
    // Remove modal state variables and related methods
    // private bool showLoginModal = false;
    // private bool showRegisterModal = false;
    // private void OpenLoginModal() => showLoginModal = true;
    // ... etc ...

    // Method to initiate OIDC login
    private void BeginLogin(MouseEventArgs args)
    {
        NavigationManager.NavigateToLogin("authentication/login");
    }

    // Method to initiate OIDC logout
    private void BeginLogout(MouseEventArgs args)
    {
        NavigationManager.NavigateToLogout("authentication/logout");
    }
}